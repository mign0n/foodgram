[project]
name = "foodgram"
version = "0.0.1"
authors = [
    {name = "mign0n", email = "mign0n.git@gmail.com"}, ]
description = ""
readme = "README.md"
requires-python = "==3.9.10"
dependencies = [
    "Django",
    "djangorestframework",
    "django-filter",
    "djoser",
    "drf-spectacular",
    "drf-spectacular[sidecar]",
    "gunicorn",
    "Pillow",
    "psycopg2-binary",
    "python-dotenv",
]

[project.license]
file = "LICENSE"

[project.optional-dependencies]
dev = [
    "black",
    "django-stubs",
    "django-stubs-ext",
    "django-testdata",
    "factory_boy",
    "flake8",
    "flake8-pyproject",
    "isort",
    "mypy",
    "mypy-extensions",
    "pymarkdownlnt",
    "pytest",
    "pytest-django",
]

[tool.black]
extend-exclude = "migrations/*"
line-length = 79
skip-string-normalization = "true"

[tool.django-stubs]
django_settings_module = "foodgram.settings"

[tool.flake8]
ignore = [
    "ANN101",
    "W503",
]
per-file-ignores = ["*/settings.py: E501"]
max-complexity = 10
max-line-length = 79
extend-exclude = [
    "tests/",
    "*/migrations/",
    "venv/",
]

[tool.isort]
profile = "black"
line_length = 79
src_paths = "backend"
extend_skip = ["migrations"]

[tool.mypy]
python_version = "3.9"
plugins = ["mypy_django_plugin.main"]
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true
mypy_path = "backend"
disable_error_code = ["var-annotated", "attr-defined"]

[tool.pytest.ini_options]
pythonpath = "foodgram/"
DJANGO_SETTINGS_MODULE = "foodgram.settings"
norecursedirs = ["venv/*"]
addopts = "-vv -p no:cacheprovider"
testpaths = ["tests/"]
python_files = ["test_*.py"]
